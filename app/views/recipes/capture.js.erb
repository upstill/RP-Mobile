/* This file is invoked by the RecipePower bookmarklet. */
// capture.js.erb
(function() {
    var ifr = document.createElement("iframe");
    // ifr.style.margin="1em";
    ifr.style.width=document.body.clientWidth+"px"; // "100%";
    // ifr.style.height = "auto";
    ifr.style['z-index'] = 100;
    ifr.style.position = "fixed";
	ifr.style.top = "0";
	ifr.style.padding = "0";
	ifr.style.margin = "0";
	ifr.style.display = 'none';
    ifr.id = "recipePower-iframe";
    ifr.src = "<%= @url %>";
	// set the width of the frame to that of the enclosing document
	ifr.style.width = window.outerWidth;
	if (ifr.attachEvent){
	    ifr.attachEvent("onload", ifrOnload);
	} else {
	    ifr.onload = ifrOnload;
	}
    document.body.appendChild(ifr);
	window.addEventListener("ifrdone", receiveMessage, false);
})();

function receiveMessage(event)
{
  debugger;
  if (event.origin !== "http://example.org:8080")
    return;

  // ...
}

function ifrOnload() {
	var ifr = this;
/*
	var capsule = document.getElementById("RecipePowerInjectedEncapsulation");
	if(!capsule) { 
	  capsule = wrapWithoutCloning(ifr);
	} 
*/
	/* We go back to the server for the dimensions of the iframe content, running
		returned Javascript to set the size appropriately */
	get_resize(ifr.attributes["src"].nodeValue);
}

function get_resize(uri) {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src = "http://localhost:5000/iframe/create.js?callback=execute_resize&url="+encodeURI(uri);
    script.id = "recipePower-loadJSONP";
    document.body.appendChild(script);
  }

function execute_resize(dims) {
	
	var height = dims.height;
	/*
	var capsule = document.getElementById("RecipePowerInjectedEncapsulation");
	var mgn = height+"px 0px 0px 0px";
	capsule.style.margin=mgn;
	*/
	
	var ifr = document.getElementById("recipePower-iframe");
	ifr.height=height;
	ifr.style.display = 'block';
	
	var s = document.getElementById("recipePower-loadJSONP");
	s.parentNode.removeChild(s);
}

/* This callback will be invoked by the javascript returned by the server, above */
function save_link_complete(data) {
  if(data.status == "success") {
    set_status("<h3>Yay!! Success</h3>"); // "<%# escape_javascript(render("shared/saved")) %>");
  } else {
    set_status("<h3>Boo! Failure</h3>"); // "<%# escape_javascript(render("shared/error")) %>");
  }
  retire_iframe();
}

function set_status(content) {
  alert(content); // jNotify(content); // document.getElementById("recipepower-status").innerHTML = content;
}

// Inject the container into the current document
function inject_iframe(ifr, area, modeless) {
  // First, remove any lingering style or script elements on the page
  // $('link.RecipePowerInjectedStyle').remove();
  // Inject our styles
  // $('<link href="http://localhost:5000/assets/foreign/dialog.css?body=1" media="screen" rel="stylesheet" type="text/css" id="RecipePowerInjectedStyle"/>').appendTo('head');
	// Find the dialog within the iframe (first and only node of type element)
	// var dlog = ifr.contentDocument.body.childNodes[0];
	var dlog = document.body.childNodes[0];
	while(dlog && dlog.nodeType != 1) {
			dlog = dlog.nextSibling;
		}
	dlog.style.width = capsule.clientWidth;
	/// close_iframe("recipePower-iframe");
	/// Now the page is ready to receive the code, prepended to the page
	/// We extract the dialog div from what may be a whole page
	/// Ensure that all scripts are loaded
	/// Run after-load functions
	/// We get and execute the onload function for the dialog
	var onload = dlog.attributes["onload"];
	if (onload && (typeof window[onload] === 'function')) {
		window[onload](dlog);
	}
	
	/// Cancel will remove the dialog and confirm null effect to user
	var cancelBtn = document.getElementById("recipePowerCancelBtn");
	if(cancelBtn) {
		cancelBtn.onclick = retire_iframe;
	}
	return dlog.offsetHeight;
	/// $('input.cancel', dlog).click( modeless ? cancelModelessDialog : cancelModalDialog );
	/// Forms submissions that expect JSON structured data will be handled here:
	/// $('form.json', dlog).submit( dlog, submitDialogForJSON );
	/// var dlgheight = $(dlog).outerHeight();
	/// $('#RecipePowerInjectedEncapsulation').css("marginTop", dlgheight)
}

/* Encapsulate the body content of the page with a div wrapper */
function wrapWithoutCloning(omitted) {
	var body = document.body;
	var wrapper = document.createElement('div'); 
	wrapper.id = "RecipePowerInjectedEncapsulation";
	// wrapper.style = body.style;
    wrapper.style.position = "absolute";
	debugger;
    wrapper.style.width = document.body.clientWidth; // "auto";
    wrapper.style.height = "auto";
	body.insertBefore(wrapper, body.firstChild );
	var child;
	while ((child = body.childNodes[1]) && (child != omitted)) {
		body.removeChild(child);
		wrapper.appendChild(child);
	}
	return wrapper;
}

/* Remove the previously-injected wrapper */
function unwrapWithoutCloning() {
	var body = document.body;
	var wrapper = document.getElementById('RecipePowerInjectedEncapsulation');
	var child;
	while(child = wrapper.childNodes[0]) {
		wrapper.removeChild(child);
		body.insertBefore(child, wrapper);
	}
	body.removeChild(wrapper);
}
